logging:
  level:
    com.wh.test: debug
spring:
  data:
    elasticsearch:
      cluster-name: elasticsearch
      cluster-nodes: 127.0.0.1:9300
  application:
    name: wh-test
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource

      # Mysql
    driver-class-name: com.mysql.cj.jdbc.Driver
    validation-query: select 1
    url: jdbc:mysql://localhost:3306/taxdev?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
    username: root
    password: root

      # Oracle
#      driver-class-name: oracle.jdbc.driver.OracleDriver
#      validation-query: SELECT 1 FROM DUAL
#      url: jdbc:oracle:thin:@10.1.2.183:1521/oracle
#      username: taxdev
#      password: taxdev
#下一行durid监控必须配置
    filters: stat,wall,log4j
    druid:
      initial-size: 10
      max-active: 100
      min-idle: 10
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true
# mapper文件配置
mybatis-plus:
  mapper-locations: classpath*:mapper/*.xml
  global-config:
    #数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID", ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: AUTO
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: NOT_NULL
    banner: false
  #原生配置
  configuration:
    database-id: mysql
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'

pagehelper:
  helperDialect: mysql # 分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。
  offsetAsPageNum: true # 默认值为 false，该参数对使用 RowBounds 作为分页参数时有效。 当该参数设置为 true 时，会将 RowBounds 中的 offset 参数当成 pageNum 使用，可以用页码和页面大小两个参数进行分页。
  rowBoundsWithCount: true # 默认值为false，该参数对使用 RowBounds 作为分页参数时有效。 当该参数设置为true时，使用 RowBounds 分页会进行 count 查询。
  reasonable: false # 分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页，pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
  pageSizeZero: true # 默认值为 false，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit = 0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。
  supportMethodsArguments: true # 支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。 使用方法可以参考测试代码中的 com.github.pagehelper.test.basic 包下的 ArgumentsMapTest 和 ArgumentsObjTest。
  defaultCount: true # 执行默认查询

server:
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    min-spare-threads: 30
  port: 8180 #端口号